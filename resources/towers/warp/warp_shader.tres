[gd_resource type="VisualShader" load_steps=20 format=2]

[ext_resource path="res://resources/towers/warp/HexagonGrid.jpg" type="Texture" id=1]

[sub_resource type="VisualShaderNodeVectorOp" id=1]

[sub_resource type="VisualShaderNodeScalarOp" id=2]
default_input_values = [ 0, 0.0, 1, 0.05 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarConstant" id=4]
constant = 0.5

[sub_resource type="VisualShaderNodeColorConstant" id=5]
constant = Color( 0.87122, 0.2548, 0.98, 1 )

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "uv"

[sub_resource type="VisualShaderNodeFresnel" id=7]
default_input_values = [ 2, false, 3, 5.0 ]

[sub_resource type="VisualShaderNodeVectorOp" id=8]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 3, 3, 0 ) ]
operator = 2

[sub_resource type="OpenSimplexNoise" id=9]
period = 50.5
persistence = 0.454
lacunarity = 2.69

[sub_resource type="NoiseTexture" id=10]
width = 1024
height = 1024
seamless = true
noise = SubResource( 9 )

[sub_resource type="VisualShaderNodeTexture" id=11]
texture = SubResource( 10 )

[sub_resource type="VisualShaderNodeScalarOp" id=12]

[sub_resource type="VisualShaderNodeScalarOp" id=13]
default_input_values = [ 0, 0.0, 1, 0.01 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=14]
input_name = "world"

[sub_resource type="VisualShaderNodeInput" id=15]
input_name = "normal"

[sub_resource type="VisualShaderNodeInput" id=16]
input_name = "view"

[sub_resource type="VisualShaderNodeTexture" id=17]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=18]
operator = 2

[resource]
code = "shader_type spatial;
uniform sampler2D tex_frg_24;uniform sampler2D tex_frg_6;


void vertex() {
// Output:0

}

void fragment() {
// Color:16
	vec3 n_out16p0;
	float n_out16p1;
	n_out16p0 = vec3(0.871220,0.254800,0.980000);
	n_out16p1 = 1.000000;

// Input:18
	vec3 n_out18p0;
	n_out18p0 = vec3(UV,0.0);

// VectorOp:23
	vec3 n_in23p1 = vec3(3.00000,3.00000,0.00000);
	vec3 n_out23p0;
	n_out23p0 = n_out18p0 * n_in23p1;

// Input:14
	float n_out14p0;
	n_out14p0 = TIME;

// ScalarOp:13
	float n_in13p1 = 0.05000;
	float n_out13p0;
	n_out13p0 = n_out14p0 * n_in13p1;

// VectorOp:12
	vec3 n_out12p0;
	n_out12p0 = n_out23p0 + vec3(n_out13p0);

// Texture:24
	vec3 n_out24p0;
	float n_out24p1;
	vec4 tex_frg_24_read = texture( tex_frg_24 , n_out12p0.xy );
	n_out24p0 = tex_frg_24_read.rgb;
	n_out24p1 = tex_frg_24_read.a;

// ScalarOp:27
	float n_in27p1 = 0.01000;
	float n_out27p0;
	n_out27p0 = dot(n_out24p0,vec3(0.333333,0.333333,0.333333)) * n_in27p1;

// Texture:6
	vec3 n_out6p0;
	float n_out6p1;
	vec4 tex_frg_6_read = texture( tex_frg_6 , n_out12p0.xy );
	n_out6p0 = tex_frg_6_read.rgb;
	n_out6p1 = tex_frg_6_read.a;

// Input:4
	vec3 n_out4p0;
	n_out4p0 = NORMAL;

// Input:5
	vec3 n_out5p0;
	n_out5p0 = VIEW;

// Fresnel:22
	bool n_in22p2 = false;
	float n_in22p3 = 5.00000;
	float n_out22p0;
	n_out22p0 = n_in22p2 ? (pow(clamp(dot(n_out4p0, n_out5p0), 0.0, 1.0), n_in22p3)) : (pow(1.0 - clamp(dot(n_out4p0, n_out5p0), 0.0, 1.0), n_in22p3));
// VectorOp:9
	vec3 n_out9p0;
	n_out9p0 = n_out6p0 * vec3(n_out22p0);

// ScalarOp:26
	float n_out26p0;
	n_out26p0 = n_out27p0 + dot(n_out9p0,vec3(0.333333,0.333333,0.333333));

// Scalar:15
	float n_out15p0;
	n_out15p0 = 0.500000;

// Output:0
	ALBEDO = n_out16p0;
	ALPHA = n_out26p0;
	ROUGHNESS = n_out15p0;
	EMISSION = n_out16p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -511, 38 )
nodes/fragment/0/position = Vector2( 820, -60 )
nodes/fragment/3/node = SubResource( 14 )
nodes/fragment/3/position = Vector2( -460, 220 )
nodes/fragment/4/node = SubResource( 15 )
nodes/fragment/4/position = Vector2( -280, 220 )
nodes/fragment/5/node = SubResource( 16 )
nodes/fragment/5/position = Vector2( -320, 300 )
nodes/fragment/6/node = SubResource( 17 )
nodes/fragment/6/position = Vector2( 0, 20 )
nodes/fragment/9/node = SubResource( 18 )
nodes/fragment/9/position = Vector2( 400, 140 )
nodes/fragment/12/node = SubResource( 1 )
nodes/fragment/12/position = Vector2( -300, -40 )
nodes/fragment/13/node = SubResource( 2 )
nodes/fragment/13/position = Vector2( -560, 20 )
nodes/fragment/14/node = SubResource( 3 )
nodes/fragment/14/position = Vector2( -760, 60 )
nodes/fragment/15/node = SubResource( 4 )
nodes/fragment/15/position = Vector2( 600, 360 )
nodes/fragment/16/node = SubResource( 5 )
nodes/fragment/16/position = Vector2( 660, 280 )
nodes/fragment/18/node = SubResource( 6 )
nodes/fragment/18/position = Vector2( -1120, -220 )
nodes/fragment/22/node = SubResource( 7 )
nodes/fragment/22/position = Vector2( -60, 260 )
nodes/fragment/23/node = SubResource( 8 )
nodes/fragment/23/position = Vector2( -560, -100 )
nodes/fragment/24/node = SubResource( 11 )
nodes/fragment/24/position = Vector2( 0, -220 )
nodes/fragment/26/node = SubResource( 12 )
nodes/fragment/26/position = Vector2( 640, -60 )
nodes/fragment/27/node = SubResource( 13 )
nodes/fragment/27/position = Vector2( 440, -140 )
nodes/fragment/connections = PoolIntArray( 6, 0, 9, 0, 14, 0, 13, 0, 13, 0, 12, 1, 15, 0, 0, 3, 12, 0, 6, 0, 16, 0, 0, 5, 16, 0, 0, 0, 4, 0, 22, 0, 5, 0, 22, 1, 22, 0, 9, 1, 18, 0, 23, 0, 23, 0, 12, 0, 26, 0, 0, 1, 24, 0, 27, 0, 12, 0, 24, 0, 9, 0, 26, 1, 27, 0, 26, 0 )
