[gd_resource type="ShaderMaterial" load_steps=4 format=2]

[sub_resource type="VisualShaderNodeScalarConstant" id=1]
constant = 0.5

[sub_resource type="VisualShaderNodeColorConstant" id=2]
constant = Color( 1, 0, 0, 1 )

[sub_resource type="VisualShader" id=3]
code = "shader_type spatial;



void vertex() {
// Output:0

}

void fragment() {
// Color:3
	vec3 n_out3p0;
	float n_out3p1;
	n_out3p0 = vec3(1.000000,0.000000,0.000000);
	n_out3p1 = 1.000000;

// Scalar:2
	float n_out2p0;
	n_out2p0 = 0.500000;

// Output:0
	ALBEDO = n_out3p0;
	ALPHA = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -197, 44 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 20, 280 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 0, 60 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 1, 3, 0, 0, 0 )

[resource]
shader = SubResource( 3 )
